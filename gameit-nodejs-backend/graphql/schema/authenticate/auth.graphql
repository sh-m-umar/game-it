# Login (authorization) schema

""" Details to auth user """
input LoginInput {
	""" Email address / Username """
	username: String!
	""" A valid password """
	password: String!
}

""" Response that will return after successful authorization """
type LoginResponse {
	""" Account details """
	me: Me!
	""" Authorization token """
	token: AuthToken!
}

type Mutation  {
	""" Authenticate user by credentials """
	login (
		""" Details to auth user """
		input: LoginInput!,
		""" Set authorization cookie after successful logged in """
		cookie: Boolean = false
	): LoginResponse! @guest @cost(complexity: 5)

	""" Logout current user """
	logout: Boolean! @auth @cost(complexity: 5)
}

#type Subscription {
#	""" Subscribe for auth user logout """
#	userLogout: Me @cost(complexity: 1)
#}
